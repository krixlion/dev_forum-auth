apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb-cluster
spec:
  serviceName: mongodb-service
  replicas: 1
  volumeClaimTemplates:
    - metadata:
        name: mongodb-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 300Mi
  template:
    spec:
      containers:
        - name: mongodb-cluster
          image: mongo:6.0.5
          # env:
          #   - name: MONGO_INITDB_ROOT_USERNAME_FILE
          #     value: /etc/secrets/admin/MONGO_ROOT_USERNAME
          #   - name: MONGO_INITDB_ROOT_PASSWORD_FILE
          #     value: /etc/secrets/admin/MONGO_ROOT_PASSWORD
          ports:
            - name: mongodb
              containerPort: 27017
              protocol: TCP
          resources:
            limits:
              cpu: 750m
              memory: 350Mi
            requests:
              cpu: 250m
              memory: 50Mi
          volumeMounts:
            # - name: secrets
            #   mountPath: /etc/secrets
            #   readOnly: true
            - name: mongodb-scripts
              mountPath: /docker-entrypoint-initdb.d
              readOnly: true
            - name: mongodb-config
              mountPath: /config
              readOnly: true
            - name: mongodb-data
              mountPath: /data/db
      volumes:
        # - name: secrets
        #   secret:
        #     secretName: mongodb-secret
        #     items:
        #       - key: MONGO_ROOT_USERNAME
        #         path: admin/MONGO_ROOT_USERNAME
        #         mode: 0444
        #       - key: MONGO_ROOT_PASSWORD
        #         path: admin/MONGO_ROOT_PASSWORD
        #         mode: 0444
        #       - key: MONGO_USERNAME
        #         path: MONGO_USERNAME
        #         mode: 0444
        #       - key: MONGO_PASSWORD
        #         path: MONGO_PASSWORD
        #         mode: 0444
        #       - key: MONGO_USERS_LIST
        #         path: MONGO_USERS_LIST
        #         mode: 0444
        - name: mongodb-scripts
          configMap:
            name: mongodb-config
            items:
              - key: ensure-users.js
                path: ensure-users.js
        - name: mongodb-config
          configMap:
            name: mongodb-config
            items:
              - key: mongo.conf
                path: mongo.conf
        - name: mongodb-data
          persistentVolumeClaim:
            claimName: mongodb-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
spec:
  clusterIP: None
  ports:
    - port: 27017
      targetPort: 27017
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-config
data:
  mongo.conf: |
    storage:
      dbPath: /data/db
  ensure-users.js: |
    const targetDbStr = 'auth-service';
    db.createUser({
      user: "admin",
      pwd: "changeit",
      roles: [
        {
          role: "userAdminAnyDatabase",
          db: "admin"
        },
        {
          role: "dbAdminAnyDatabase",
          db: "admin"
        },
        {
          role: "readWriteAnyDatabase",
          db: "admin"
        }
      ]
    });
# ---
# apiVersion: v1
# kind: Secret
# metadata:
#   name: mongodb-secret
# type: Opaque
# data:
#   MONGO_ROOT_USERNAME: YWRtaW4K
#   MONGO_ROOT_PASSWORD: cGFzc3dvcmQK
#   MONGO_USERNAME: dGVzdAo=
#   MONGO_PASSWORD: cGFzc3dvcmQK
#   MONGO_USERS_LIST: dGVzdDpkYkFkbWluLHJlYWRXcml0ZTpwYXNzd29yZAo=
